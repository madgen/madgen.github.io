<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <title>Do disturb me</title>
    <link href="https://dodisturb.me/atom.xml" rel="self" />
    <link href="https://dodisturb.me" />
    <id>https://dodisturb.me/atom.xml</id>
    <author>
        <name>Mistral Contrastin</name>
        <email>madgenhetic@gmail.com</email>
    </author>
    <updated>2018-06-19T00:00:00Z</updated>
    <entry>
    <title>GADT a la Jane Street in Haskell</title>
    <link href="https://dodisturb.me/posts/2018-06-19-GADT-a-la-Jane-Street-in-Haskell.html" />
    <id>https://dodisturb.me/posts/2018-06-19-GADT-a-la-Jane-Street-in-Haskell.html</id>
    <published>2018-06-19T00:00:00Z</published>
    <updated>2018-06-19T00:00:00Z</updated>
    <summary type="html"><![CDATA[In which we translate Marvin Minsky's GADT use case and blog post into Haskell and highlight the differences.]]></summary>
</entry>
<entry>
    <title>Cellular Christmas Tree</title>
    <link href="https://dodisturb.me/posts/2018-01-28-Cellular-Christmas-Tree.html" />
    <id>https://dodisturb.me/posts/2018-01-28-Cellular-Christmas-Tree.html</id>
    <published>2018-01-28T00:00:00Z</published>
    <updated>2018-01-28T00:00:00Z</updated>
    <summary type="html"><![CDATA[In which we create a program displaying a Christmas tree from a single dot on an infinite tape using two cellular automata computed with comonads as used in Haskell. You can also call it yet another comonad tutorial if you like.]]></summary>
</entry>

</feed>
